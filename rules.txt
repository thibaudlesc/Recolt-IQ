rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // --- Fonctions d'aide ---
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isAcceptingShare() {
      let before = resource.data;
      let after = request.resource.data;
      let isAddingSelf = after.accessControl.hasAny([request.auth.uid]);
      let otherFieldsUnchanged = after.name == before.name &&
                                 after.crop == before.crop &&
                                 after.size == before.size &&
                                 after.ownerId == before.ownerId &&
                                 after.trailers == before.trailers;
      let accessControlLogic =
          (!('accessControl' in before) && after.accessControl.size() == 1) ||
          ('accessControl' in before && after.accessControl.size() == before.accessControl.size() + 1);
      return isAddingSelf && otherFieldsUnchanged && accessControlLogic;
    }

    // --- Règle pour les profils utilisateurs ---
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if isOwner(userId);
    }

    // --- Règle pour l'ACCÈS DIRECT aux parcelles ---
    match /users/{ownerId}/fields/{fieldId} {
      allow get: if request.auth != null;
      allow list: if request.auth != null && isOwner(ownerId);
      allow create, delete: if request.auth != null && isOwner(ownerId);
      allow update: if request.auth != null && (
        isOwner(ownerId) ||
        isAcceptingShare() ||
        request.auth.uid in resource.data.accessControl
      );
    }

    // --- Règle pour la REQUÊTE sur le groupe de collections 'fields' (pour les partages) ---
    match /{path=**}/fields/{fieldId} {
      allow list: if request.auth != null && request.auth.uid in resource.data.accessControl;
    }

    // --- Règle pour les noms de bennes ---
    // MODIFIÉ: Chaque utilisateur ne peut accéder qu'à sa propre liste de noms de bennes.
    match /users/{userId}/trailerNames/{trailerNameId} {
       allow read, write, delete: if request.auth.uid == userId;
    }

    // --- Règle pour les jetons de partage ---
    match /shareTokens/{tokenId} {
      allow read, write, delete: if request.auth != null;
    }
    
    // NOUVEAU: Collection pour gérer les permissions de partage
    match /user_shares/{ownerId}/sharers/{sharerId} {
        allow read: if request.auth.uid == ownerId || request.auth.uid == sharerId;
        // Un utilisateur peut s'ajouter à la liste des partages d'un propriétaire (via un token sécurisé)
        allow create: if request.auth.uid == sharerId;
        // Seul le propriétaire peut retirer un utilisateur de sa liste de partage
        allow delete: if request.auth.uid == ownerId;
    }
  }
}
